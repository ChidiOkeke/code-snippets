{"version":3,"sources":["components/Snippet.jsx","data/data.js","App.js","index.js"],"names":["Snippet","_ref","title","snippet","react_default","a","createElement","prism","className","language","style","materialDark","data","id","name","category","App","_useState","useState","snippets","Object","slicedToArray","_useState3","_useState4","query","setQuery","mapSnippets","components_Snippet","key","InputGroup","onChange","event","target","value","FormControl","placeholder","aria-label","aria-describedby","filter","toLowerCase","indexOf","map","filterSnippets","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"wMAgBiBA,MAZjB,SAAAC,GAAmCA,EAAjBC,MAAiB,IAAVC,EAAUF,EAAVE,QAErB,OAEEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAmBC,UAAU,UAAUC,SAAS,aAAaC,MAAOC,KAC/DR,ICTES,EAAO,CACpB,CACIC,GAAK,EACLC,KAAO,YACPC,SAAW,QACXZ,QAAO,4DAKX,CACIU,GAAK,EACLC,KAAO,YACPC,SAAW,QACXZ,QAAO,iDAKX,CACIU,GAAK,EACLC,KAAO,YACPC,SAAW,QACXZ,QAAO,mDAKX,CACIU,GAAK,EACLC,KAAO,YACPC,SAAW,SACXZ,QAAO,uLASX,CACIU,GAAK,EACLC,KAAO,YACPC,SAAW,SACXZ,QAAO,8IASX,CACIU,GAAK,EACLC,KAAO,YACPC,SAAW,QACXZ,QAAO,6KAQX,CACIU,GAAK,EACLC,KAAO,YACPC,SAAW,QACXZ,QAAO,iQClBIa,MA5Cf,WAAe,IAAAC,EAEMC,mBAASN,GAArBO,EAFMC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,MAAAK,EAGaJ,mBAAS,IAHtBK,EAAAH,OAAAC,EAAA,EAAAD,CAAAE,EAAA,GAGNE,EAHMD,EAAA,GAGCE,EAHDF,EAAA,GAUPG,EAAc,SAACvB,GACjB,OAAOC,EAAAC,EAAAC,cAACqB,EAAD,CAASC,IAAKzB,EAAQU,GAAIX,MAAOC,EAAQW,KAAMX,QAASA,EAAQA,WAQ3E,OACIC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAEXJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eAAd,YAEAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBAEbJ,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAYrB,UAAU,OAAOsB,SApBlB,SAACC,GAClBN,EAASM,EAAMC,OAAOC,SAoBZ7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACEC,YAAY,uBACZC,aAAW,uBACXC,mBAAiB,0BAfV,SAAClB,GACpB,OAAOA,EAASmB,OAAO,SAAAnB,GAAQ,OAAIA,EAAShB,QAAQoC,cAAcC,QAAQhB,EAAMe,gBAAkB,IAAGE,IAAIf,GAmBlGgB,CAAevB,aCrCfwB,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH3C,EAAAC,EAAAC,cAACF,EAAAC,EAAM2C,WAAP,KACE5C,EAAAC,EAAAC,cAAC2C,EAAD","file":"static/js/main.c8687e18.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { materialDark} from 'react-syntax-highlighter/dist/esm/styles/prism';\r\n\r\nfunction Snippet({title, snippet}) {\r\n \r\n    return (\r\n          \r\n      <SyntaxHighlighter className=\"snippet\" language=\"javascript\" style={materialDark}>\r\n          {snippet}\r\n      </SyntaxHighlighter>\r\n \r\n    )\r\n     \r\n}\r\n  \r\n  export default Snippet","export const data = [\r\n{ \r\n    id : 1,\r\n    name : \"Snippet 1\",\r\n    category : \"basic\",\r\n    snippet: \r\n`function square(number){\r\n    return number * number;\r\n}`\r\n},  \r\n{ \r\n    id : 2,\r\n    name : \"Snippet 2\",\r\n    category : \"basic\",\r\n    snippet :\r\n`function divide(a , b){\r\n    return a / b;\r\n}`\r\n},\r\n{ \r\n    id : 3,\r\n    name : \"Snippet 3\",\r\n    category : \"basic\",\r\n    snippet :\r\n`function multiply(a , b){\r\n    return a * b;\r\n}`\r\n},\r\n{\r\n    id : 4,\r\n    name : \"Snippet 3\",\r\n    category : \"arrays\",\r\n    snippet: \r\n    \r\n`function addArrays(...args) {\r\n    return args.reduce((total,arr)=>total.concat(arr));\r\n}\r\n    \r\nconsole.log(addArrays([2,3,4],[6,4,9],[34,6,4])) \r\n// [2, 3, 4, 6, 4, 9, 34, 6, 4]`\r\n},\r\n{\r\n    id : 5,\r\n    name : \"Snippet 4\",\r\n    category : \"arrays\",\r\n    snippet: \r\n    \r\n`function getCharFromString(string, index) {\r\n    return string[index - 1];\r\n }\r\n    \r\nconsole.log(getCharFromString('zyxbwpl',5)) \r\n// 'w'`\r\n},\r\n{\r\n    id : 6,\r\n    name : \"Snippet 5\",\r\n    category : \"basic\",\r\n    snippet:\r\n\r\n`function getBinaryFromDeciamSum(Dec1, Dec2) {\r\n    return ((Dec1 + Dec2) > 0) ? (Dec1 + Dec2).toString(2) : 'Error';\r\n}\r\nconsole.log(getBinaryFromDeciamSum(4,1))\r\n// 101`\r\n},\r\n{\r\n    id : 7,\r\n    name : \"Snippet 5\",\r\n    category : \"array\",\r\n    snippet:\r\n\r\n`function arrayDiff(array1, array2) {\r\n    const newArray = [];\r\n    array1.forEach((element) => {\r\n        !array2.includes(element) ? newArray.push(element) : false;\r\n    });\r\nreturn newArray;\r\nconsole.log(arrayDiff([1,2,2,2,3],[2]))\r\n// [1, 3]`\r\n}\r\n\r\n\r\n\r\n];","import { useState } from \"react\";\nimport React from 'react';\nimport {InputGroup, FormControl} from 'react-bootstrap';\nimport Snippet from \"./components/Snippet\";\nimport {data} from './data/data.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n\n  const [snippets] = useState(data);\n  const [query, setQuery] = useState(\"\");\n\n  //update query state based on input value\n  const handleSearch = (event) => {\n      setQuery(event.target.value);\n  }\n  //map snippet data to component propss\n  const mapSnippets = (snippet) => {\n      return <Snippet key={snippet.id} title={snippet.name} snippet={snippet.snippet}/>\n  }\n\n  // filter snippets where query matches snippet and return snippets\n  const filterSnippets = (snippets) => {\n      return snippets.filter(snippets => snippets.snippet.toLowerCase().indexOf(query.toLowerCase()) > -1).map(mapSnippets);\n  }\n\n  return (\n      <div className=\"App\">\n\n          <h1 className=\"text-center\">Snippets</h1>\n\n          <div className=\"col-md-6 mx-auto\">\n            \n            <InputGroup className=\"mb-3\" onChange={handleSearch}>\n                <FormControl\n                  placeholder=\"Search code snippets\"\n                  aria-label=\"Search code snippets\"\n                  aria-describedby=\"Search code snippets\"\n                />\n            </InputGroup>\n            \n            \n            {filterSnippets(snippets)}\n          \n          </div>\n        \n      </div>\n\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\n"],"sourceRoot":""}